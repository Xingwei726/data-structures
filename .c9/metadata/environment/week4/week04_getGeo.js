{"filter":false,"title":"week04_getGeo.js","tooltip":"/week4/week04_getGeo.js","undoManager":{"mark":1,"position":1,"stack":[[{"start":{"row":0,"column":0},"end":{"row":30,"column":1},"action":"insert","lines":["function getGeocode(name, zip, address) {","    //Check to see if the address already has the geocode before continue to save unneccesary API calls. ","    if (!(address.hasOwnProperty('geocode'))) {","        //Set up the API request","        var apiRequest = 'https://geoservices.tamu.edu/Services/Geocode/WebService/GeocoderWebServiceHttpNonParsed_V04_01.aspx?';","        apiRequest += 'streetAddress=' + address.street_info.split(' ').join('%20');","        apiRequest += '&city=New%20York&state=NY&zip=' + zip + '&apikey=' + apiKey;","        apiRequest += '&format=json&version=4.01';","","        request(apiRequest, function (err, resp, body) {","            if (err) { throw err; }","            else {","                var tamuGeo = JSON.parse(body);","                //Extract the latitude and longitude","                var lat = tamuGeo['OutputGeocodes'][0]['OutputGeocode']['Latitude'];","                var lon = tamuGeo['OutputGeocodes'][0]['OutputGeocode']['Longitude'];","","                //Save a geocode object to the meetings object","                meetings[name]['address']['coords'] = {","                    latitude: lat,","                    longitude: lon","                };","","                //Save the meetings object to file","                fs.writeFileSync('data/AAAll.json', JSON.stringify(meetings));","            }","        });","    } else {","        fs.writeFileSync('data/AAAll.json', JSON.stringify(meetings));","    }","}"],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":30,"column":1},"action":"remove","lines":["function getGeocode(name, zip, address) {","    //Check to see if the address already has the geocode before continue to save unneccesary API calls. ","    if (!(address.hasOwnProperty('geocode'))) {","        //Set up the API request","        var apiRequest = 'https://geoservices.tamu.edu/Services/Geocode/WebService/GeocoderWebServiceHttpNonParsed_V04_01.aspx?';","        apiRequest += 'streetAddress=' + address.street_info.split(' ').join('%20');","        apiRequest += '&city=New%20York&state=NY&zip=' + zip + '&apikey=' + apiKey;","        apiRequest += '&format=json&version=4.01';","","        request(apiRequest, function (err, resp, body) {","            if (err) { throw err; }","            else {","                var tamuGeo = JSON.parse(body);","                //Extract the latitude and longitude","                var lat = tamuGeo['OutputGeocodes'][0]['OutputGeocode']['Latitude'];","                var lon = tamuGeo['OutputGeocodes'][0]['OutputGeocode']['Longitude'];","","                //Save a geocode object to the meetings object","                meetings[name]['address']['coords'] = {","                    latitude: lat,","                    longitude: lon","                };","","                //Save the meetings object to file","                fs.writeFileSync('data/AAAll.json', JSON.stringify(meetings));","            }","        });","    } else {","        fs.writeFileSync('data/AAAll.json', JSON.stringify(meetings));","    }","}"],"id":2},{"start":{"row":0,"column":0},"end":{"row":46,"column":3},"action":"insert","lines":["// dependencies","var request = require('request'); // npm install request","var async = require('async'); // npm install async","const fs = require('fs');","const dotenv = require('dotenv'); // npm install dotenv","","// TAMU api key","dotenv.config();","const apiKey = process.env.TAMU_KEY;","","// Load addresses information","var rawAddresses = fs.readFileSync('../week4/AAAll.json');","var afterAddresses = JSON.parse(rawAddresses);","","var addresses = [];","","var i;","for (i in afterAddresses){","    addresses.push(afterAddresses[i]['streetAddress']);","}","","","async.eachSeries(addresses, function(value, callback) {","    var apiRequest = 'https://geoservices.tamu.edu/Services/Geocode/WebService/GeocoderWebServiceHttpNonParsed_V04_01.aspx?';","    apiRequest += 'streetAddress=' + value.split(' ').join('%20');","    apiRequest += '&city=New%20York&state=NY&apikey=' + apiKey;","    apiRequest += '&format=json&version=4.01';","","        request(apiRequest, function (err, resp, body) {","            if (err) { throw err; }","            else {","                var tamuGeo = JSON.parse(body);","                //Extract the latitude and longitude","                var lat = tamuGeo['OutputGeocodes'][0]['OutputGeocode']['Latitude'];","                var lon = tamuGeo['OutputGeocodes'][0]['OutputGeocode']['Longitude'];","","                //Save geocode to the meetings object","                meetings[name]['address']['coords'] = {","                    latitude: lat,","                    longitude: lon","                };","            }","        });","        setTimeout(callback, 2000);","    }, function() {","        fs.writeFileSync('data/AAAll.json', JSON.stringify(meetings));","});"]}],[{"start":{"row":15,"column":15},"end":{"row":15,"column":16},"action":"insert","lines":[";"],"id":7}],[{"start":{"row":15,"column":13},"end":{"row":15,"column":15},"action":"insert","lines":["[]"],"id":6}],[{"start":{"row":15,"column":11},"end":{"row":15,"column":12},"action":"insert","lines":[" "],"id":5},{"start":{"row":15,"column":12},"end":{"row":15,"column":13},"action":"insert","lines":["="]}],[{"start":{"row":15,"column":3},"end":{"row":15,"column":4},"action":"insert","lines":[" "],"id":4},{"start":{"row":15,"column":4},"end":{"row":15,"column":5},"action":"insert","lines":["m"]},{"start":{"row":15,"column":5},"end":{"row":15,"column":6},"action":"insert","lines":["e"]},{"start":{"row":15,"column":6},"end":{"row":15,"column":7},"action":"insert","lines":["e"]},{"start":{"row":15,"column":7},"end":{"row":15,"column":8},"action":"insert","lines":["t"]},{"start":{"row":15,"column":8},"end":{"row":15,"column":9},"action":"insert","lines":["i"]},{"start":{"row":15,"column":9},"end":{"row":15,"column":10},"action":"insert","lines":["n"]},{"start":{"row":15,"column":10},"end":{"row":15,"column":11},"action":"insert","lines":["g"]}],[{"start":{"row":14,"column":19},"end":{"row":15,"column":0},"action":"insert","lines":["",""],"id":3},{"start":{"row":15,"column":0},"end":{"row":15,"column":1},"action":"insert","lines":["v"]},{"start":{"row":15,"column":1},"end":{"row":15,"column":2},"action":"insert","lines":["a"]},{"start":{"row":15,"column":2},"end":{"row":15,"column":3},"action":"insert","lines":["r"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":14,"column":19},"end":{"row":14,"column":19},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1571443596984,"hash":"0a32aaef96485f7327a0391d4375c91882c9807b"}