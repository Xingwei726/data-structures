{"filter":false,"title":"week04_dataprepare.js","tooltip":"/week4/week04_dataprepare.js","undoManager":{"mark":31,"position":31,"stack":[[{"start":{"row":0,"column":0},"end":{"row":163,"column":4},"action":"remove","lines":["var request = require('request');","var fs = require('fs');","const dotenv = require('dotenv');","// dotenv.config({ path: '/home/ec2-user/environment/week4/.env' });","var cheerio = require('cheerio');","","// TAMU api key","dotenv.config();","const apiKey = process.env.TAMU_KEY;","","var meetings = {};","","//Set up a loop to read all txt files in week1 folder.","for (let i = 0; i < 10; i++) {","    let index = 0;","    //for zone 1~9, there is a 0 after m in the file name, for zone 10 it's \"m10.txt\"","    if (i < 9) {","        index = '0' + (i + 1);","    } else {","        index = (i + 1);","    }","    ","    fs.readFile('/home/ec2-user/environment/week1/m' + index + '.txt', 'utf8', (error, data) => {","        if (error) throw error;","        const $ = cheerio.load(data);","        function splitString(meetingname, separator) {","            const arrayOfStrings = meetingname.split(separator);","            console.log(arrayOfStrings.join(' '));","        }","        ","        $('tr tr tr').each(function (i, item) {","            if (i != 0) {","                //Meeting Name","                var meetingName = $(this).children().eq(0).find('b').text();","                splitString (meetingName, '-');","                ","                // Get address Detalils and use '.filter(Boolean)' to removes values which are empty strings or null","                var location = $(this).children().eq(0).text().split(/\\n|,|\\(|\\)|-/).map(item => item.trim()).filter(Boolean);","","                // Clean the redundant","                $(this).children().eq(0).find('span').remove().html();","                $(this).children().eq(0).find('div').remove().html();","                $(this).children().eq(0).find('b').remove().html();","                ","                //Extract the name in the H4 and check that the location has a name","                var locationName = $(this).children().eq(0).find('h4').text();","                $(this).children().eq(0).find('h4').remove().html();","                ","","                //Wheelchair Access","                var access = false;","                if ($(this).children().eq(0).find('span').text().trim() == \"Wheelchair access\") {","                    access = true;","                }","","                // Replace Abbreviations in address","                location[0] = location[0].replace(\" E \", \" East \");","                location[0] = location[0].replace(\" E. \", \" East \");","                location[0] = location[0].replace(\" W \", \" West \");","                location[0] = location[0].replace(\" W. \", \" West \");","                location[0] = location[0].replace(\" St \", \" Street \");","                location[0] = location[0].replace(\" Av \", \" Avenue \");","                location[0] = location[0].replace(\" Av. \", \" Avenue \");","","                //Check is address line 1 only contains digits, if so, join the next line","                if ((location[0].replace(/\\D+/g, '').length == 0) || (location[0].replace(/\\d/g, '').length == 0)) {","                    location[0] = location[0] + \" \" + location[1];","                    location.splice(1, 1);","                }","","                if ((location[0].replace(/\\D+/g, '').length == 0) || (location[0].replace(/\\d/g, '').length == 0)) {","                    location[0] = location[0] + \" \" + location[1];","                    location.splice(1, 1);","                }","","                // Some location names are blank so use the first line of the address","                if (locationName == \"\") {","                    locationName = location[0];","                }","","                var zipcode = location[location.length - 1].slice(-5).replace(/\\D+/g, '');","","","                //Create an address object","                var addressObj = {","                    street_info: location[0],","                    city: \"New York\",","                    state: \"NY\",","                    zip: zipcode,","                    details: location.join(','),","                    wheelchair_access: access,","                    zone: index","                };","","                //If the meetings object does not contain this address, add it.","                if (!(meetings.hasOwnProperty(location))) {","                    meetings[locationName] = {","                        address: addressObj,","                        'meetings': {}","                    };","                }","","                //Extract the meeting times into an array","                var meetingTimes = $(this).children().eq(1).text().split('\\n').map(item => item.trim()).filter(Boolean);","","                //For each meeting time, itterate through and extract the details into an object.","                for (let x = 0; x < meetingTimes.length; x++) {","","                    console.log(meetingTimes[x]);","                    var times = meetingTimes[x].split(' ');","                    var timesObj = {","                        day: times[0],","                        start: times[3] + ' ' + times[4],","                        end: times[6] + ' ' + times[7],","                        type: times[10]","                    };","","                    //If the meeting has already been created, append the meeting times, else add the meeting and times.","                    if (meetings[locationName]['meetings'].hasOwnProperty(meetingName)) {","                        meetings[locationName]['meetings'][meetingName].push(timesObj);","                    } else {","                        meetings[locationName]['meetings'][meetingName] = [timesObj];","                    }","                }","","                // getGeocode(locationName, zipcode, addressObj);","                            fs.writeFileSync('data/AAAll2.json', JSON.stringify(meetings));","","            }","        });","    });","}","","// function getGeocode(name, zip, address) {","//     //Check to see if the address already has the geocode before continue to save unneccesary API calls. ","//     if (!(address.hasOwnProperty('geocode'))) {","//         //Set up the API request","//         var apiRequest = 'https://geoservices.tamu.edu/Services/Geocode/WebService/GeocoderWebServiceHttpNonParsed_V04_01.aspx?';","//         apiRequest += 'streetAddress=' + address.street_info.split(' ').join('%20');","//         apiRequest += '&city=New%20York&state=NY&zip=' + zip + '&apikey=' + apiKey;","//         apiRequest += '&format=json&version=4.01';","","//         request(apiRequest, function (err, resp, body) {","//             if (err) { throw err; }","//             else {","//                 var tamuGeo = JSON.parse(body);","//                 //Extract the latitude and longitude","//                 var lat = tamuGeo['OutputGeocodes'][0]['OutputGeocode']['Latitude'];","//                 var lon = tamuGeo['OutputGeocodes'][0]['OutputGeocode']['Longitude'];","","//                 //Save a geocode object to the meetings object","//                 meetings[name]['address']['coords'] = {","//                     latitude: lat,","//                     longitude: lon","//                 };","","//                 //Save the meetings object to file","//                 fs.writeFileSync('data/AAAll.json', JSON.stringify(meetings));","//             }","//         });","//     } else {","//         fs.writeFileSync('data/AAAll.json', JSON.stringify(meetings));","//     }","// }"],"id":7},{"start":{"row":0,"column":0},"end":{"row":126,"column":1},"action":"insert","lines":["// INSTALL DEPENDENCIES","var request = require('request');","var fs = require('fs');","const dotenv = require('dotenv');","var cheerio = require('cheerio');","","// TAMU API KEY","dotenv.config();","const apiKey = process.env.TAMU_KEY;","","var meetings = {};","","for (let i = 0; i < 10; i++) {","    let index = 0;","    //for zone 1~9, there is a 0 after m in the file name, for zone 10 it's \"m10.txt\"","    if (i < 9) {","        index = '0' + (i + 1);","    } else {","        index = (i + 1);","    }","","","    // LOAD FILE TO CHEERIO","    fs.readFile('/home/ec2-user/environment/week1/m' + index + '.txt', 'utf8', (error, data) => {","        if (error) throw error;","        const $ = cheerio.load(data);","","        $('tr tr tr').each(function (i, elem) {","            if (i !== 0) {","","                // LOCATION DETAILS","                var location = $(elem).find('td').eq(0).text().split(/\\n|,|\\(|\\)|-/).map(item => item.trim()).filter(Boolean);","","                // LOCATION NAMES","                var locationName = location[0];","","                // if($(elem).find('h4').attr(\"style\")===\"margin:0;padding:0;\"){","                //   var locationName=$(elem).text().split('\\n').map(item => item.trim()).filter(Boolean);","                // }","","                // MEETING NAMES","                var meetingName = $(elem).find('td').eq(0).find('b').text().split(' - ')[0].toUpperCase();","","                // // ZIPCODE","                var zipcode = $(elem).html().split('<br>')[3].trim().slice(-5);","","                // // WHEELCHAIR ACCESS INFORMATION","                var wheelchair;","                if ($(elem).html().includes('Wheelchair access')) {","                    wheelchair = true;","                } else {","                    wheelchair = false;","                }","","                // // REMOVE REDUNDANT","                $(elem).find('div').eq(0).remove();","                $(elem).find('b').eq(0).remove();","                $(elem).find('span').eq(0).remove();","","","                if (!(meetings.hasOwnProperty(locationName))) {","                    meetings[locationName] = {","                        locationTitle: locationName,","                        streetInfo: location[3],","                        city: \"New York\",","                        state: \"NY\",","                        zip: zipcode,","                        details: location[3] + ' ' + location[4] + ' ' + location[5],","                        wheelchair: wheelchair,","                        'meetings': {}","                    };","                }","","","                // EXTRACT MEETING TIMES","                var meetingTimes = $(elem).find('td').eq(1).text().split('\\n').map(item => item.trim()).filter(Boolean);","","                for (let t = 0; t < meetingTimes.length; t++) {","                    console.log(meetingTimes[t]);","                    var times = meetingTimes[t].split(' ');","                    var timesObj = {","                        day: times[0],","                        start: times[3] + ' ' + times[4],","                        end: times[6] + ' ' + times[7],","                        type: times[10]","                    };","","                    if (meetings[locationName]['meetings'].hasOwnProperty(meetingName)) {","                        meetings[locationName]['meetings'][meetingName].push(timesObj);","                    } else {","                        meetings[locationName]['meetings'][meetingName] = [timesObj];","                    }","                }","","                // CALL THE GEOCODE FUNCTION","                getGeocode(locationName, meetings);","            }","        });","    });","","    function getGeocode(name, address) {","        var apiRequest = 'https://geoservices.tamu.edu/Services/Geocode/WebService/GeocoderWebServiceHttpNonParsed_V04_01.aspx?';","        apiRequest += 'streetAddress=' + address.streetInfo.split(' ').join('%20');","        apiRequest += '&city=New%20York&state=NY&apikey=' + apiKey;","        apiRequest += '&format=json&version=4.01';","","        request(apiRequest, function (err, resp, body) {","            if (err) { throw err; }","            else {","                // var latLong = {}; // object container for 'address' lat' & 'lng'","                // latLong.address = tamuGeo['InputAddress']['StreetAddress'];","                var tamuGeo = JSON.parse(body);","                var lat = tamuGeo['OutputGeocodes'][0]['OutputGeocode']['Latitude'];","                var lon = tamuGeo['OutputGeocodes'][0]['OutputGeocode']['Longitude'];","                // geoCodes.push(latLong)","","                meetings[name]['geocode'] = {","                    latitude: lat,","                    longitude: lon","                };","","                //Save the meetings object to file","                fs.writeFileSync('data/AA09.json', JSON.stringify(meetings));","            }","        });","    }","}"]}],[{"start":{"row":99,"column":0},"end":{"row":99,"column":1},"action":"insert","lines":["}"],"id":8}],[{"start":{"row":126,"column":0},"end":{"row":126,"column":1},"action":"remove","lines":["}"],"id":9}],[{"start":{"row":99,"column":1},"end":{"row":100,"column":0},"action":"insert","lines":["",""],"id":10}],[{"start":{"row":99,"column":1},"end":{"row":99,"column":2},"action":"insert","lines":[";"],"id":11}],[{"start":{"row":99,"column":1},"end":{"row":99,"column":2},"action":"remove","lines":[";"],"id":12}],[{"start":{"row":120,"column":18},"end":{"row":121,"column":0},"action":"remove","lines":["",""],"id":13}],[{"start":{"row":121,"column":0},"end":{"row":122,"column":0},"action":"remove","lines":["                //Save the meetings object to file",""],"id":14}],[{"start":{"row":92,"column":17},"end":{"row":93,"column":0},"action":"remove","lines":["",""],"id":15}],[{"start":{"row":71,"column":17},"end":{"row":72,"column":0},"action":"remove","lines":["",""],"id":16}],[{"start":{"row":19,"column":5},"end":{"row":20,"column":0},"action":"remove","lines":["",""],"id":17}],[{"start":{"row":14,"column":6},"end":{"row":14,"column":14},"action":"remove","lines":["for zone"],"id":18},{"start":{"row":14,"column":6},"end":{"row":14,"column":7},"action":"insert","lines":["F"]},{"start":{"row":14,"column":7},"end":{"row":14,"column":8},"action":"insert","lines":["O"]},{"start":{"row":14,"column":8},"end":{"row":14,"column":9},"action":"insert","lines":["R"]}],[{"start":{"row":14,"column":9},"end":{"row":14,"column":10},"action":"insert","lines":[" "],"id":19},{"start":{"row":14,"column":10},"end":{"row":14,"column":11},"action":"insert","lines":["Z"]},{"start":{"row":14,"column":11},"end":{"row":14,"column":12},"action":"insert","lines":["O"]},{"start":{"row":14,"column":12},"end":{"row":14,"column":13},"action":"insert","lines":["N"]},{"start":{"row":14,"column":13},"end":{"row":14,"column":14},"action":"insert","lines":["E"]}],[{"start":{"row":14,"column":20},"end":{"row":14,"column":30},"action":"remove","lines":["there is a"],"id":20},{"start":{"row":14,"column":20},"end":{"row":14,"column":21},"action":"insert","lines":["T"]},{"start":{"row":14,"column":21},"end":{"row":14,"column":22},"action":"insert","lines":["H"]},{"start":{"row":14,"column":22},"end":{"row":14,"column":23},"action":"insert","lines":["E"]},{"start":{"row":14,"column":23},"end":{"row":14,"column":24},"action":"insert","lines":["R"]},{"start":{"row":14,"column":24},"end":{"row":14,"column":25},"action":"insert","lines":["E"]}],[{"start":{"row":14,"column":25},"end":{"row":14,"column":26},"action":"insert","lines":[" "],"id":21},{"start":{"row":14,"column":26},"end":{"row":14,"column":27},"action":"insert","lines":["I"]},{"start":{"row":14,"column":27},"end":{"row":14,"column":28},"action":"insert","lines":["S"]}],[{"start":{"row":14,"column":28},"end":{"row":14,"column":29},"action":"insert","lines":[" "],"id":22},{"start":{"row":14,"column":29},"end":{"row":14,"column":30},"action":"insert","lines":["A"]}],[{"start":{"row":14,"column":33},"end":{"row":14,"column":38},"action":"remove","lines":["after"],"id":23},{"start":{"row":14,"column":33},"end":{"row":14,"column":34},"action":"insert","lines":["A"]},{"start":{"row":14,"column":34},"end":{"row":14,"column":35},"action":"insert","lines":["F"]},{"start":{"row":14,"column":35},"end":{"row":14,"column":36},"action":"insert","lines":["T"]},{"start":{"row":14,"column":36},"end":{"row":14,"column":37},"action":"insert","lines":["E"]},{"start":{"row":14,"column":37},"end":{"row":14,"column":38},"action":"insert","lines":["R"]}],[{"start":{"row":14,"column":42},"end":{"row":14,"column":57},"action":"remove","lines":["n the file name"],"id":24},{"start":{"row":14,"column":41},"end":{"row":14,"column":42},"action":"remove","lines":["i"]}],[{"start":{"row":14,"column":41},"end":{"row":14,"column":42},"action":"insert","lines":["I"],"id":25},{"start":{"row":14,"column":42},"end":{"row":14,"column":43},"action":"insert","lines":["N"]}],[{"start":{"row":14,"column":43},"end":{"row":14,"column":44},"action":"insert","lines":[" "],"id":26},{"start":{"row":14,"column":44},"end":{"row":14,"column":45},"action":"insert","lines":["T"]},{"start":{"row":14,"column":45},"end":{"row":14,"column":46},"action":"insert","lines":["H"]},{"start":{"row":14,"column":46},"end":{"row":14,"column":47},"action":"insert","lines":["E"]}],[{"start":{"row":14,"column":47},"end":{"row":14,"column":48},"action":"insert","lines":[" "],"id":27},{"start":{"row":14,"column":48},"end":{"row":14,"column":49},"action":"insert","lines":["N"]},{"start":{"row":14,"column":49},"end":{"row":14,"column":50},"action":"insert","lines":["A"]},{"start":{"row":14,"column":50},"end":{"row":14,"column":51},"action":"insert","lines":["M"]},{"start":{"row":14,"column":51},"end":{"row":14,"column":52},"action":"insert","lines":["E"]}],[{"start":{"row":14,"column":54},"end":{"row":14,"column":62},"action":"remove","lines":["for zone"],"id":28},{"start":{"row":14,"column":54},"end":{"row":14,"column":55},"action":"insert","lines":["F"]},{"start":{"row":14,"column":55},"end":{"row":14,"column":56},"action":"insert","lines":["O"]},{"start":{"row":14,"column":56},"end":{"row":14,"column":57},"action":"insert","lines":["R"]}],[{"start":{"row":14,"column":57},"end":{"row":14,"column":58},"action":"insert","lines":[" "],"id":29},{"start":{"row":14,"column":58},"end":{"row":14,"column":59},"action":"insert","lines":["Z"]},{"start":{"row":14,"column":59},"end":{"row":14,"column":60},"action":"insert","lines":["O"]},{"start":{"row":14,"column":60},"end":{"row":14,"column":61},"action":"insert","lines":["N"]},{"start":{"row":14,"column":61},"end":{"row":14,"column":62},"action":"insert","lines":["E"]}],[{"start":{"row":14,"column":66},"end":{"row":14,"column":70},"action":"remove","lines":["it's"],"id":30},{"start":{"row":14,"column":66},"end":{"row":14,"column":67},"action":"insert","lines":["I"]},{"start":{"row":14,"column":67},"end":{"row":14,"column":68},"action":"insert","lines":["T"]},{"start":{"row":14,"column":68},"end":{"row":14,"column":69},"action":"insert","lines":["'"]},{"start":{"row":14,"column":69},"end":{"row":14,"column":70},"action":"insert","lines":["S"]}],[{"start":{"row":118,"column":42},"end":{"row":118,"column":43},"action":"remove","lines":["9"],"id":31},{"start":{"row":118,"column":41},"end":{"row":118,"column":42},"action":"remove","lines":["0"]}],[{"start":{"row":118,"column":41},"end":{"row":118,"column":42},"action":"insert","lines":["A"],"id":32},{"start":{"row":118,"column":42},"end":{"row":118,"column":43},"action":"insert","lines":["L"]},{"start":{"row":118,"column":43},"end":{"row":118,"column":44},"action":"insert","lines":["L"]}],[{"start":{"row":118,"column":43},"end":{"row":118,"column":44},"action":"remove","lines":["L"],"id":33},{"start":{"row":118,"column":42},"end":{"row":118,"column":43},"action":"remove","lines":["L"]}],[{"start":{"row":118,"column":42},"end":{"row":118,"column":43},"action":"insert","lines":["L"],"id":34},{"start":{"row":118,"column":43},"end":{"row":118,"column":44},"action":"insert","lines":["L"]}],[{"start":{"row":118,"column":43},"end":{"row":118,"column":44},"action":"remove","lines":["L"],"id":35},{"start":{"row":118,"column":42},"end":{"row":118,"column":43},"action":"remove","lines":["L"]}],[{"start":{"row":118,"column":42},"end":{"row":118,"column":43},"action":"insert","lines":["L"],"id":36},{"start":{"row":118,"column":43},"end":{"row":118,"column":44},"action":"insert","lines":["L"]}],[{"start":{"row":118,"column":43},"end":{"row":118,"column":44},"action":"remove","lines":["L"],"id":37},{"start":{"row":118,"column":42},"end":{"row":118,"column":43},"action":"remove","lines":["L"]}],[{"start":{"row":118,"column":42},"end":{"row":118,"column":44},"action":"insert","lines":["ll"],"id":38}]]},"ace":{"folds":[],"scrolltop":1673,"scrollleft":0,"selection":{"start":{"row":9,"column":0},"end":{"row":9,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":103,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1571714121840,"hash":"decec6662f974784545545c655c9ca8613f3ad90"}